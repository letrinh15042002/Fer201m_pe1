{"ast":null,"code":"import { COMMENTS } from '../shared/comments';\nimport { ITEMS } from '../shared/items';\nimport * as ActionTypes from './ActionTypes';\nexport const Comments = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : COMMENTS;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENT:\n      var comment = action.payload;\n      comment.id = state.length;\n      comment.date = new Date().toISOString();\n      console.log(\"Comment: \", comment);\n      return state.concat(comment);\n    default:\n      return state;\n  }\n};\n_c = Comments;\nexport const Items = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ITEMS;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ActionTypes.ADD_ITEMS:\n      var item = action.payload;\n      item.id = state.length;\n      item.date = new Date().toISOString();\n      console.log(\"item: \", item);\n      return state.concat(item);\n    default:\n      return state;\n  }\n};\n_c2 = Items;\nvar _c, _c2;\n$RefreshReg$(_c, \"Comments\");\n$RefreshReg$(_c2, \"Items\");","map":{"version":3,"names":["COMMENTS","ITEMS","ActionTypes","Comments","state","arguments","length","undefined","action","type","ADD_COMMENT","comment","payload","id","date","Date","toISOString","console","log","concat","_c","Items","ADD_ITEMS","item","_c2","$RefreshReg$"],"sources":["C:/Users/LENOVO/Documents/BOOK/SU2023/FER/pe1/src/redux/comments.js"],"sourcesContent":["import { COMMENTS } from '../shared/comments';\r\nimport { ITEMS } from '../shared/items';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = COMMENTS, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            comment.id = state.length;\r\n            comment.date = new Date().toISOString();\r\n            console.log(\"Comment: \", comment);\r\n            return state.concat(comment);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const Items = (state = ITEMS, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_ITEMS:\r\n            var item = action.payload;\r\n            item.id = state.length;\r\n            item.date = new Date().toISOString();\r\n            console.log(\"item: \", item);\r\n            return state.concat(item);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,KAAK,QAAQ,iBAAiB;AACvC,OAAO,KAAKC,WAAW,MAAM,eAAe;AAE5C,OAAO,MAAMC,QAAQ,GAAG,SAAAA,CAAA,EAA8B;EAAA,IAA7BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,QAAQ;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKP,WAAW,CAACQ,WAAW;MACxB,IAAIC,OAAO,GAAGH,MAAM,CAACI,OAAO;MAC5BD,OAAO,CAACE,EAAE,GAAGT,KAAK,CAACE,MAAM;MACzBK,OAAO,CAACG,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACvCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEP,OAAO,CAAC;MACjC,OAAOP,KAAK,CAACe,MAAM,CAACR,OAAO,CAAC;IAEhC;MACI,OAAOP,KAAK;EACpB;AACJ,CAAC;AAACgB,EAAA,GAZWjB,QAAQ;AAcrB,OAAO,MAAMkB,KAAK,GAAG,SAAAA,CAAA,EAA2B;EAAA,IAA1BjB,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,KAAK;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACvC,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKP,WAAW,CAACoB,SAAS;MACtB,IAAIC,IAAI,GAAGf,MAAM,CAACI,OAAO;MACzBW,IAAI,CAACV,EAAE,GAAGT,KAAK,CAACE,MAAM;MACtBiB,IAAI,CAACT,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEK,IAAI,CAAC;MAC3B,OAAOnB,KAAK,CAACe,MAAM,CAACI,IAAI,CAAC;IAE7B;MACI,OAAOnB,KAAK;EACpB;AACJ,CAAC;AAACoB,GAAA,GAZWH,KAAK;AAAA,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}